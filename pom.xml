<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>lmdb-javacpp</groupId>
  <artifactId>lmdb-javacpp</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>lmdb-javacpp</name>
  <description>lmdb-javacpp</description>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- To skip execution of cppbuild.sh: -Djavacpp.cppbuild.skip=true -->
    <javacpp.cppbuild.skip>false</javacpp.cppbuild.skip>
    <!-- To skip header file parsing phase: -Djavacpp.parser.skip=true  -->
    <javacpp.parser.skip>false</javacpp.parser.skip>
    <!-- To skip native compilation phase: -Djavacpp.compiler.skip=true -->
    <javacpp.compiler.skip>false</javacpp.compiler.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>javacpp</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.agrona</groupId>
      <artifactId>Agrona</artifactId>
      <version>0.5.1</version>
    </dependency>
    <dependency>
      <groupId>org.deephacks.lmdbjni</groupId>
      <artifactId>lmdbjni-linux64</artifactId>
      <version>0.4.6</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>javacpp.parser</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <configuration>
              <includes>
                <include>org/deephacks/lmdbjni/*.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>javacpp.parser</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <skipMain>${javacpp.parser.skip}</skipMain>
              <includes>
                <include>org/deephacks/lmdbjni/*.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.bytedeco</groupId>
        <artifactId>javacpp</artifactId>
        <version>1.2</version>
        <configuration>
          <properties>${javacpp.platform}</properties>
          <propertyKeysAndValues>
            <property>
              <name>platform.root</name>
              <value>${javacpp.platform.root}</value>
            </property>
            <property>
              <name>platform.compiler</name>
              <value>g++</value>
              <value>${javacpp.platform.compiler}</value>
            </property>
          </propertyKeysAndValues>
          <classPath>${project.build.outputDirectory}</classPath>
          <includePath>${basedir}/src/main/native</includePath>
          <linkPath>${basedir}/src/main/native</linkPath>
        </configuration>
        <executions>
          <execution>
            <id>javacpp.parser</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <compilerOptions>
                <option>-fpermissive</option>
                <!--<option>-Wl,-Bstatic</option>-->
                <!--<option>&#45;&#45;static</option>-->
                <!--<option>-llmdb</option>-->
                <!--<option>/home/stoffe/dev/lmdbjni-javacpp-poc/src/main/native/liblmdb.a</option>-->
              </compilerOptions>
              <deleteJniFiles>false</deleteJniFiles>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <classOrPackageName>org.deephacks.lmdbjni.*</classOrPackageName>
              <copyLibs>true</copyLibs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
